services:
  postgresRuns:
    image: 'postgres:14.15-alpine3.21'
    environment:
      - 'POSTGRES_DB=runs'
      - 'POSTGRES_PASSWORD=passwordToChange'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5433:5432'
    volumes:
      - postgres-runs-data:/var/lib/postgresql/data
  postgresUsers:
    image: 'postgres:14.15-alpine3.21'
    environment:
      - 'POSTGRES_DB=users'
      - 'POSTGRES_PASSWORD=passwordToChange'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    volumes:
      - postgres-users-data:/var/lib/postgresql/data
  postgresStatistics:
    image: 'postgres:14.15-alpine3.21'
    environment:
      - 'POSTGRES_DB=rankings'
      - 'POSTGRES_PASSWORD=passwordToChange'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5431:5432'
    volumes:
      - postgres-statistics-data:/var/lib/postgresql/data
  mongoNotifications:
    image: mongo:6.0
    container_name: mongoNotifications
    ports:
      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: root
#      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongo-data:/data/db
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://developer.confluent.io/confluent-tutorials/kafka-on-docker/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
volumes:
  postgres-runs-data:
    driver: local
  postgres-users-data:
    driver: local
  postgres-statistics-data:
    driver: local
  mongo-data:
    driver: local